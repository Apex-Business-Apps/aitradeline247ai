workflows:
  ios_capacitor_testflight:
    name: TradeLine247 â†’ TestFlight (Capacitor)
    instance_type: mac_mini_m2
    max_build_duration: 60

    environment:
      groups:
        - appstore_credentials      # APP_STORE_CONNECT_KEY_IDENTIFIE, APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_PRIVATE_KEY
        - ios_config                # TEAM_ID, XCODE_WORKSPACE, XCODE_SCHEME, BUNDLE_ID, etc.
      vars:
        APP_VERSION: "1.0.0"
        TEAM_ID_FALLBACK: "NWGUYF42KW"
      xcode: "16.0"
      cocoapods: "default"
      node: "20.11.1"
      npm: "10"

    scripts:
      - name: Resolve version/build
        script: |
          set -euo pipefail
          : "${APP_VERSION:=1.0.0}"
          APP_BUILD="$(date +%y%m%d%H%M)"
          {
            echo "APP_VERSION=$APP_VERSION"
            echo "APP_BUILD=$APP_BUILD"
          } >> "$CM_ENV"

      - name: Install npm dependencies
        script: |
          set -euo pipefail
          npm ci

      - name: Build web assets
        script: |
          set -euo pipefail
          npm run build

      - name: Verify web build artifacts
        script: |
          set -euo pipefail
          [[ -f dist/index.html ]] || { echo "Missing dist/index.html after npm run build"; exit 1; }

      - name: Sync Capacitor iOS wrapper
        script: |
          set -euo pipefail
          npx --yes cap sync ios

      - name: Verify iOS project exists
        script: |
          set -euo pipefail
          PROJECT_FILE="ios/App/App.xcodeproj/project.pbxproj"
          WORKSPACE_PATH="${XCODE_WORKSPACE:-ios/App/App.xcworkspace}"
          WORKSPACE_FILE="${WORKSPACE_PATH%/}/contents.xcworkspacedata"
          missing=0
          [[ -f "$PROJECT_FILE" ]] || { echo "Expected $PROJECT_FILE after cap sync"; missing=1; }
          [[ -f "$WORKSPACE_FILE" ]] || { echo "Expected $WORKSPACE_FILE after cap sync"; missing=1; }
          (( missing == 0 )) || { echo "Run 'npx cap add ios' locally and commit ios/App"; exit 1; }

      - name: Verify signing environment (idempotent)
        script: |
          set -euo pipefail
          TEAM_ID_VALUE="${TEAM_ID:-$TEAM_ID_FALLBACK}"

          # Your exact appstore_credentials variable names:
          REQUIRED=(APP_STORE_CONNECT_KEY_IDENTIFIE APP_STORE_CONNECT_ISSUER_ID APP_STORE_CONNECT_PRIVATE_KEY)
          MISSING=()
          for V in "${REQUIRED[@]}"; do
            [[ -n "${!V:-}" ]] || MISSING+=("$V")
          done
          if (( ${#MISSING[@]} )); then
            echo "Missing environment variables: ${MISSING[*]}"
            echo "Ensure 'appstore_credentials' contains: ${REQUIRED[*]}"
            exit 1
          fi

          {
            echo "TEAM_ID=$TEAM_ID_VALUE"
          } >> "$CM_ENV"

      - name: Install CocoaPods dependencies
        script: |
          set -euo pipefail
          cd ios/App
          pod install

      - name: Prepare export options (App Store)
        script: |
          set -euo pipefail
          cat > "$CM_BUILD_DIR/ExportOptions.plist" <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>method</key><string>app-store</string>
              <key>signingStyle</key><string>automatic</string>
              <key>stripSwiftSymbols</key><true/>
              <key>compileBitcode</key><true/>
              <key>destination</key><string>export</string>
              <key>manageAppVersionAndBuildNumber</key><true/>
            </dict>
          </plist>
          PLIST

      - name: Archive iOS (Release)
        script: |
          set -euo pipefail
          WORKSPACE_PATH="${XCODE_WORKSPACE:-ios/App/App.xcworkspace}"
          WORKSPACE_DIR="$(dirname "$WORKSPACE_PATH")"
          WORKSPACE_NAME="$(basename "$WORKSPACE_PATH")"
          SCHEME_NAME="${XCODE_SCHEME:-App}"
          BUNDLE_ID_VALUE="${BUNDLE_ID:-com.apex.tradeline}"

          cd "$WORKSPACE_DIR"
          xcodebuild \
            -workspace "$WORKSPACE_NAME" \
            -scheme "$SCHEME_NAME" \
            -configuration Release \
            -sdk iphoneos \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID_VALUE" \
            MARKETING_VERSION="$APP_VERSION" \
            CURRENT_PROJECT_VERSION="$APP_BUILD" \
            clean archive

      - name: Export IPA
        script: |
          set -euo pipefail
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/ExportOptions.plist" \
            -exportPath "$CM_BUILD_DIR/export"

    artifacts:
      - $CM_BUILD_DIR/App.xcarchive
      - $CM_BUILD_DIR/export/*.ipa

    publishing:
      app_store_connect:
        api_key:
          key_id: $APP_STORE_CONNECT_KEY_IDENTIFIE
          issuer_id: $APP_STORE_CONNECT_ISSUER_ID
          private_key: $APP_STORE_CONNECT_PRIVATE_KEY
        submit_to_testflight: true
