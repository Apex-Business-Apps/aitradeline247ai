workflows:
  ios_capacitor_testflight:
    name: iOS Capacitor → TestFlight
    instance_type: mac_mini_m1
    max_build_duration: 60

    integrations:
      app_store_connect: APEX Business Systems

    environment:
      xcode: 15.4
      node: 20.15.1
      vars:
        TEAM_ID: "NWGUYF42KW"
        BUNDLE_ID: "com.apex.tradeline"
        IOS_BUILD_NUM: $PROJECT_BUILD_NUMBER
        # Set this in Codemagic UI to the exact profile name, e.g. TL247_mobpro_tradeline_01
        DIST_PROFILE_NAME: $DIST_PROFILE_NAME

    cache:
      cache_paths:
        - ios/App/Pods
        - ~/.cocoapods/repos
        - ~/Library/Caches/CocoaPods
        - ~/.npm

    scripts:
      - name: Install deps & build web
        script: |
          set -euo pipefail
          npm ci
          npm run build

      - name: Ensure iOS platform (idempotent + self-heal)
        script: |
          set -euo pipefail
          PROJECT_DIR="ios/App"
          XCPROJ="$PROJECT_DIR/App.xcodeproj"
          XCWORK="$PROJECT_DIR/App.xcworkspace"
          if [ -d "$XCPROJ" ] || [ -d "$XCWORK" ]; then
            echo "✅ Found iOS project — skipping add"
          else
            if [ -d ios ]; then
              echo "⚠️  ios/ exists but no Xcode project — cleaning and re-adding"
              rm -rf ios
            fi
            echo "🆕 Adding iOS platform..."
            if [ ! -d node_modules/@capacitor/ios ]; then
              echo "❌ Missing @capacitor/ios in node_modules. Ensure npm ci completed successfully."
              exit 1
            fi
            npx cap add ios
            git checkout -- ios/App/Podfile ios/App/App/Assets.xcassets ios/App/App/Info.plist
          fi

      - name: Sync iOS & CocoaPods (fast)
        script: |
          set -euo pipefail
          npx cap sync ios
          cd ios/App

          command -v pod >/dev/null 2>&1 || sudo gem install cocoapods --no-document
          pod --version

          # Prefer CDN for speed; only update repos if the fast path fails
          if ! grep -q 'https://cdn.cocoapods.org' Podfile; then
            printf "source 'https://cdn.cocoapods.org/'\n%s" "$(cat Podfile)" > Podfile
          fi

          if ! pod install --no-repo-update --quiet; then
            echo "⚠️ Fast install failed, updating specs once…"
            pod repo update || true
            pod install --repo-update --verbose
          fi

          test -d App.xcworkspace || { echo "❌ CocoaPods didn't produce App.xcworkspace"; exit 1; }

      - name: Set iOS build number from Codemagic
        script: |
          set -euo pipefail
          if [ -n "${IOS_BUILD_NUM:-}" ]; then
            /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${IOS_BUILD_NUM}" ios/App/App/Info.plist || true
            echo "ℹ️  CFBundleVersion set to ${IOS_BUILD_NUM}"
          else
            echo "↪️  IOS_BUILD_NUM not set; skipping Info.plist patch"
          fi

      - name: Debug installed provisioning profiles (optional)
        script: |
          security find-identity -v -p codesigning || true
          ls -1 ~/Library/MobileDevice/Provisioning\ Profiles || true
          if [ -n "${DIST_PROFILE_NAME:-}" ]; then
            grep -H -A2 -m1 -r "$DIST_PROFILE_NAME" ~/Library/MobileDevice/Provisioning\ Profiles || true
          fi

      # >>> THIS is the new pair you needed INSIDE scripts:
      - name: Apply provisioning profiles to Xcode project (per-target)
        script: |
          set -euo pipefail
          xcode-project use-profiles --project "ios/App/App.xcodeproj"

      - name: Xcode archive (manual via applied profiles)
        script: |
          set -euo pipefail
          xcodebuild -workspace "ios/App/App.xcworkspace" \
            -scheme "App" \
            -configuration Release \
            -sdk iphoneos \
            -destination "generic/platform=iOS" \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            CURRENT_PROJECT_VERSION="${IOS_BUILD_NUM:-1}" \
            -quiet \
            clean archive

      - name: Export IPA (map bundle → profile)
        script: |
          set -euo pipefail
          : "${DIST_PROFILE_NAME:?Set DIST_PROFILE_NAME to your App Store profile name (e.g. TL247_mobpro_tradeline_01)}"
          cat > exportOptions.plist <<PLIST
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0"><dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>NWGUYF42KW</string>
            <key>destination</key><string>export</string>
            <key>stripSwiftSymbols</key><true/>
            <key>compileBitcode</key><false/>
            <key>provisioningProfiles</key>
            <dict>
              <key>${BUNDLE_ID}</key><string>${DIST_PROFILE_NAME}</string>
            </dict>
          </dict></plist>
          PLIST

          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist exportOptions.plist \
            -exportPath "$CM_BUILD_DIR/export"

    artifacts:
      - $CM_BUILD_DIR/export/*.ipa
      - $CM_BUILD_DIR/App.xcarchive

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        # beta_groups:
        #   - Internal Testers
