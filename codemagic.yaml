workflows:
  ios_capacitor_testflight:
    name: iOS Capacitor TestFlight
    instance_type: mac_mini_m2
    max_build_duration: 60
    environment:
      groups:
        - appstore_credentials
      vars:
        APP_VERSION: "1.0.0"
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        BUNDLE_ID: "com.apex.tradeline"
      xcode: "16.0"
      cocoapods: "default"
      node: "20.11.1"
      npm: "10"
    scripts:
      - name: Resolve version/build
        script: |
          set -euo pipefail
          : "${APP_VERSION:=1.0.0}"
          APP_BUILD="$(date +%y%m%d%H%M)"
          {
            echo "APP_VERSION=$APP_VERSION"
            echo "APP_BUILD=$APP_BUILD"
          } >> "$CM_ENV"
      - name: Install npm dependencies
        script: npm ci
      - name: Build web assets
        script: npm run build
      - name: Verify web build artifacts
        script: |
          set -euo pipefail
          if [ ! -f dist/index.html ]; then
            echo "Missing dist/index.html after npm run build" >&2
            exit 1
          fi
      - name: Sync Capacitor iOS wrapper
        script: |
          set -euo pipefail
          npx --yes cap sync ios
      - name: Verify iOS project exists
        script: |
          set -euo pipefail
          PROJECT_FILE="ios/App/App.xcodeproj/project.pbxproj"
          WORKSPACE_PATH="${XCODE_WORKSPACE:-ios/App/App.xcworkspace}"
          if [ ! -f "$PROJECT_FILE" ]; then
            echo "Expected $PROJECT_FILE before running pod install" >&2
            echo "Run 'npx cap add ios' locally and commit the generated wrapper" >&2
            exit 1
          fi
          if [ ! -f "$WORKSPACE_PATH/contents.xcworkspacedata" ]; then
            echo "Expected $WORKSPACE_PATH/contents.xcworkspacedata before running pod install" >&2
            echo "Ensure the workspace is committed or regenerate it with 'npx cap sync ios'" >&2
            exit 1
          fi
      - name: Install CocoaPods dependencies
        script: |
          set -euo pipefail
          cd ios/App
          pod install
      - name: Verify signing environment
        script: |
          set -euo pipefail
          missing=0
          for var in TEAM_ID APP_STORE_CONNECT_KEY_IDENTIFIER APP_STORE_CONNECT_ISSUER_ID APP_STORE_CONNECT_PRIVATE_KEY; do
            if [ -z "${!var:-}" ]; then
              echo "Missing required environment variable: $var" >&2
              missing=1
            fi
          done
          if [ "$missing" -ne 0 ]; then
            echo "Populate TEAM_ID and the App Store Connect API key variables in Codemagic's environment groups." >&2
            exit 1
          fi
      - name: Archive iOS build
        script: |
          set -euo pipefail
          cd ios/App
          WORKSPACE_NAME="$(basename "${XCODE_WORKSPACE:-ios/App/App.xcworkspace}")"
          SCHEME_NAME="${XCODE_SCHEME:-App}"
          xcodebuild \
            -workspace "$WORKSPACE_NAME" \
            -scheme "$SCHEME_NAME" \
            -configuration Release \
            -sdk iphoneos \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="${TEAM_ID}" \
            PRODUCT_BUNDLE_IDENTIFIER="${BUNDLE_ID:-com.apex.tradeline}" \
            MARKETING_VERSION="$APP_VERSION" \
            CURRENT_PROJECT_VERSION="$APP_BUILD" \
            clean archive
      - name: Export IPA
        script: |
          set -euo pipefail
          cat <<'PLIST' > "$CM_BUILD_DIR/ExportOptions.plist"
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>method</key>
              <string>app-store</string>
              <key>signingStyle</key>
              <string>automatic</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <true/>
            </dict>
          </plist>
          PLIST
          xcodebuild \
            -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportOptionsPlist "$CM_BUILD_DIR/ExportOptions.plist" \
            -exportPath "$CM_BUILD_DIR/export"
    artifacts:
      - $CM_BUILD_DIR/App.xcarchive
      - $CM_BUILD_DIR/export/*.ipa
    publishing:
      app_store_connect:
        api_key:
          key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
          issuer_id: $APP_STORE_CONNECT_ISSUER_ID
          private_key: $APP_STORE_CONNECT_PRIVATE_KEY
        submit_to_testflight: true
