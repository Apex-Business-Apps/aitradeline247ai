name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  build:
    name: ci/build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  ci-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      # 1) Detect if package.json has a "test" script
      - name: Detect test script
        id: pkg
        run: echo "has_test=$(node -p \"require('./package.json').scripts?.test||''\")" >> "$GITHUB_OUTPUT"

      # 2) Only run tests if the script actually exists
      - name: Run tests (if present)
        if: ${{ steps.pkg.outputs.has_test != '' }}
        run: npm test -- --ci
  lint:
    name: ci/lint
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  e2e:
    name: ci/e2e
    runs-on: ubuntu-latest
    needs: [build, ci-test, lint]
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Build app
        run: npm run build
      - name: Start preview server
        run: |
          npm run preview &> preview.log &
          echo $! > preview.pid
      - name: Wait for server
        run: npx wait-on http://localhost:4173 --timeout 120000
      - name: Run Playwright tests
        env:
          E2E_BASE_URL: http://localhost:4173
        run: npx playwright test --reporter=line
      - name: Upload Playwright report (on fail)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/**
      - name: Stop preview
        if: always()
        run: |
          if [ -f preview.pid ]; then kill $(cat preview.pid) || true; fi
          sleep 2 || true
          pkill -f "vite preview" || true

  ios-build:
    name: ci/ios
    runs-on: macos-14
    needs: [build]
    timeout-minutes: 35
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web assets
        run: npm run build

      - name: Ensure iOS project scaffold
        run: |
          set -euo pipefail
          if [ ! -d ios/App/App.xcodeproj ]; then
            rm -rf ios
            npx cap add ios
            git checkout -- ios/App/Podfile ios/App/App/Assets.xcassets ios/App/App/Info.plist
          fi

      - name: Ensure CocoaPods
        run: |
          if ! command -v pod >/dev/null 2>&1; then
            sudo gem install cocoapods --no-document
          fi
          pod --version

      - name: Sync Capacitor iOS project
        run: npx cap sync ios

      - name: Install iOS pods
        working-directory: ios/App
        run: |
          test -d App.xcodeproj
          pod install --verbose

      - name: Verify workspace output
        run: test -d ios/App/App.xcworkspace

      - name: Build iOS workspace
        run: |
          xcodebuild \
            -workspace ios/App/App.xcworkspace \
            -scheme App \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'generic/platform=iOS Simulator' \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            build
