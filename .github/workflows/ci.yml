name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  build:
    name: ci/build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run build

  lint:
    name: ci/lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run lint --if-present

  test:
    name: ci/test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Detect test script
        id: pkg
        run: echo "has_test=$(node -p \"(require('./package.json').scripts||{}).test||''\")" >> $GITHUB_OUTPUT
      - name: Install deps
        if: ${{ steps.pkg.outputs.has_test != '' }}
        run: npm ci
      - name: Run tests (if present)
        if: ${{ steps.pkg.outputs.has_test != '' }}
        run: npm test -- --ci
      - name: Skip (no tests)
        if: ${{ steps.pkg.outputs.has_test == '' }}
        run: echo "No test script defined â€” skipping."

  ios:
    name: ci/ios-build
    runs-on: macos-14
    needs: [ build, lint, test ]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Build web assets
        run: npm run build
      - name: Verify web build artifacts
        run: |
          set -euo pipefail
          if [[ ! -f dist/index.html ]]; then
            echo "::error title=Missing web bundle::Expected dist/index.html after 'npm run build'." >&2
            exit 1
          fi
      - name: Sync Capacitor iOS wrapper
        run: npx --yes cap sync ios
      - name: Verify iOS project exists
        run: |
          set -euo pipefail
          if [[ ! -f ios/App/App.xcodeproj/project.pbxproj ]]; then
            echo "::error title=Missing Xcode project::Expected ios/App/App.xcodeproj/project.pbxproj before running CocoaPods." >&2
            echo "Run 'npx cap add ios' locally and commit the generated workspace." >&2
            exit 1
          fi
      - name: Sync Capacitor iOS wrapper
        run: npx cap sync ios
      - name: Install CocoaPods dependencies
        working-directory: ios/App
        run: pod install
      - name: Build iOS workspace (simulator)
        working-directory: ios/App
        run: |
          set -eo pipefail
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'generic/platform=iOS Simulator' \
            CODE_SIGNING_ALLOWED=NO \
            build

  e2e:
    name: ci/e2e
    runs-on: ubuntu-latest
    needs: [ build, test ]
    if: false  # enable when you actually add e2e
    steps:
      - run: echo "E2E disabled for now."
