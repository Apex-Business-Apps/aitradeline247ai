name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  build:
    name: ci/build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run build

  lint:
    name: ci/lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run lint --if-present

  test:
    name: ci/test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Detect test script
        id: pkg
        run: echo "has_test=$(node -p \"(require('./package.json').scripts||{}).test||''\")" >> $GITHUB_OUTPUT
      - name: Install deps
        if: ${{ steps.pkg.outputs.has_test != '' }}
        run: npm ci
      - name: Run tests (if present)
        if: ${{ steps.pkg.outputs.has_test != '' }}
        run: npm test -- --ci
      - name: Skip (no tests)
        if: ${{ steps.pkg.outputs.has_test == '' }}
        run: echo "No test script defined â€” skipping."

  ios:
    name: ci/ios-build
    runs-on: macos-14
    needs: [ build, lint, test ]
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Build web assets
        run: npm run build
      - name: Verify web build artifacts
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f dist/index.html ]; then
            echo "::error title=Missing web bundle::Expected dist/index.html after 'npm run build'." >&2
            exit 1
          fi
      - name: Sync Capacitor iOS wrapper
        shell: bash
        run: |
          set -euo pipefail
          npx --yes cap sync ios
      - name: Verify iOS project exists
        shell: bash
        run: |
          set -euo pipefail
          missing=0
          PROJECT_FILE="ios/App/App.xcodeproj/project.pbxproj"
          WORKSPACE_PATH="${XCODE_WORKSPACE:-ios/App/App.xcworkspace}"
          if [ ! -f "$PROJECT_FILE" ]; then
            echo "::error title=Missing Xcode project::Expected $PROJECT_FILE before running CocoaPods." >&2
            echo "Run 'npx cap add ios' locally and commit the generated workspace." >&2
            missing=1
          fi
          if [ ! -f "$WORKSPACE_PATH/contents.xcworkspacedata" ]; then
            echo "::error title=Missing Xcode workspace::Expected $WORKSPACE_PATH/contents.xcworkspacedata to exist." >&2
            echo "Open the project in Xcode and save the workspace, or rerun 'npx cap sync ios'." >&2
            missing=1
          fi
          if [ "$missing" -ne 0 ]; then
            exit 1
          fi
      - name: Install CocoaPods dependencies
        shell: bash
        working-directory: ios/App
        run: |
          set -euo pipefail
          pod install
      - name: Build iOS workspace (simulator)
        working-directory: ios/App
        run: |
          set -euo pipefail
          WORKSPACE_NAME="$(basename "${XCODE_WORKSPACE:-ios/App/App.xcworkspace}")"
          SCHEME_NAME="${XCODE_SCHEME:-App}"
          xcodebuild \
            -workspace "$WORKSPACE_NAME" \
            -scheme "$SCHEME_NAME" \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'generic/platform=iOS Simulator' \
            CODE_SIGNING_ALLOWED=NO \
            build

  e2e:
    name: ci/e2e
    runs-on: ubuntu-latest
    needs: [ build, test ]
    if: false  # enable when you actually add e2e
    steps:
      - run: echo "E2E disabled for now."
